//This will probably be available from the town menu, we might also put it in the Rowdy Barstead.

var answer
var H = "Hearts"
var C = "Clubs"
var D = "Diamonds"
var S = "Spades"
var J = "Jack"
var Q = "Queen"
var K = "King"
var A = "Ace"
var sortedDeck = [
  [1, 2, 3, H], //[Actual value, What's on the card, What's on the card in Scumbags and Warlords, Suit]
  [2, 3, 4, H],
  [3, 4, 5, H],
  [4, 5, 6, H],
  [5, 6, 7, H],
  [6, 7, 8, H],
  [7, 8, 9, H],
  [8, 9, 10, H],
  [9, 10, J, H],
  [10, J, Q, H],
  [11, Q, K, H],
  [12, K, A, H],
  [13, A, 2, H],
  [1, 2, 3, C],
  [2, 3, 4, C],
  [3, 4, 5, C],
  [4, 5, 6, C],
  [5, 6, 7, C],
  [6, 7, 8, C],
  [7, 8, 9, C],
  [8, 9, 10, C],
  [9, 10, J, C],
  [10, J, Q, C],
  [11, Q, K, C],
  [12, K, A, C],
  [13, A, 2, C],
  [1, 2, 3, D],
  [2, 3, 4, D],
  [3, 4, 5, D],
  [4, 5, 6, D],
  [5, 6, 7, D],
  [6, 7, 8, D],
  [7, 8, 9, D],
  [8, 9, 10, D],
  [9, 10, J, D],
  [10, J, Q, D],
  [11, Q, K, D],
  [12, K, A, D],
  [13, A, 2, D],
  [1, 2, 3, S],
  [2, 3, 4, S],
  [3, 4, 5, S],
  [4, 5, 6, S],
  [5, 6, 7, S],
  [6, 7, 8, S],
  [7, 8, 9, S],
  [8, 9, 10, S],
  [9, 10, J, S],
  [10, J, Q, S],
  [11, Q, K, S],
  [12, K, A, S],
  [13, A, 2, S],
]
var shuffledDeck = []
var hand1 = []
var hand2 = []
var hand3 = []
var hand4 = []
//Scumbags cases
var dubs
var trips
var quads
var doubleDoubles
var tripleDoubles
var quadrupleDoubles
var quintupleDoubles
var sextupleDoubles //If you get really lucky...
var runFour //The one after run 3
var runEight
var runTwelve
//From old code
var bet
var tempVal


//Got this from the internet https://www.frankmitchell.org/2015/01/fisher-yates/
function shuffle(array) {
  var i = 0,
    j = 0,
    temp = null

  for (i = array.length - 1; i > 0; i -= 1) {
    j = Math.floor(Math.random() * (i + 1))
    temp = array[i]
    array[i] = array[j]
    array[j] = temp
  }
  shuffledDeck = array
}

function dealScumbags() {
  for (i = 1; i <= 13; i++) {
    hand1.push(shuffledDeck[i])
  }
  for (i = 14; i <= 26; i++) {
    hand2.push(shuffledDeck[i])
  }
  for (i = 27; i <= 39; i++) {
    hand3.push(shuffledDeck[i])
  }
  for (i = 40; i <= 52; i++) {
    hand4.push(shuffledDeck[i])
  }
}

function chooseGame() {
  answer = prompt('What game do you want to play?', 'Scumbags and Warlords, High or Low, Blackjack, Slots').toUpperCase() //I'm making this with alert/prompt because I don't want to copy the writing functions, also I'm just better with alert/prompt.
  switch (answer) {
    case 'SCUMBAGS AND WARLORDS':
      scumbagsAndWarlords()
      break;
    case 'HIGH OR LOW':
      TheActualHighLow()
      break;
    case 'BLACKJACK':
      blackjack()
      break;
    case 'SLOTS':
      slots()
      break;
  }
}

function scumbagsAndWarlords() {
  shuffle(sortedDeck)
  dealScumbags()
  alert('Your hand is ' + hand1 + '.')

}

function TheActualHighLow() {
  answer = prompt('Do you know how High or Low works?', 'Yes, No').toUpperCase()
  switch (answer) {
    case 'YES':
      TheActualForRealsiesHighLow()
      break;
    case 'NO':
      HighLowTutorial()
      break;
    default:
      NotAnOption()
      TheActualHighLow()
  }
}

function HighLowTutorial() {
  alert('High or Low is a game played with a deck of cards. The dealer deals a card, and you guess whether the next card is higher or lower. 2 is lower than 3, 3 is lower than 4, etc. Aces are the highest card, for the purposes of this game. If the first card is an Ace or a 2, a new card will be dealt, because those are the highest and lowest cards. If the card value is the same, you get your bet back. The next alert will show how much you will be payed if you guess right. Any decimal will be rounded down. After you win, you will be given a choice. If you want to continue, then you can get more money. Otherwise, you can just stop and take the money you already have in the bank.')
  alert('If you get dealt a 3, you will get: a 10.7 multiplier if you guess lower, and a 1.1 if you guess higher.')
  alert('If you get dealt a 4, you will get: a 5.3 multiplier if you guess lower, and a 1.1 if you guess higher.')
  alert('If you get dealt a 5, you will get: a 3.5 multiplier if you guess lower, and a 1.1 if you guess higher.')
  alert('If you get dealt a 6, you will get: a 2.6 multiplier if you guess lower, and a 1.3 if you guess higher.')
  alert('If you get dealt a 7, you will get: a 2.1 multiplier if you guess lower, and a 1.5 if you guess higher.')
  alert('If you get dealt a 8, you will get: a 1.7 multiplier if you guess lower, and a 1.7 if you guess higher.')
  alert('If you get dealt a 9, you will get: a 1.5 multiplier if you guess lower, and a 2.1 if you guess higher.')
  alert('If you get dealt a 10, you will get: a 1.3 multiplier if you guess lower, and a 2.6 if you guess higher.')
  alert('If you get dealt a Jack, you will get: a 1.1 multiplier if you guess lower, and a 3.5 if you guess higher.')
  alert('If you get dealt a Queen, you will get: a 1.1 multiplier if you guess lower, and a 5.3 if you guess higher.')
  alert('If you get dealt a King, you will get: a 1.1 multiplier if you guess lower, and a 10.7 if you guess higher.')
  TheActualForRealsiesHighLow()
}

function TheActualForRealsiesHighLow() {
  shuffle(sortedDeck)
  alert('You got a ' + shuffledDeck[1][2] + '.')
  valueNum = tempVal
  answer = prompt('Higher or Lower?', 'Higher, Lower').toUpperCase()
  switch (answer) {
    case 'HIGHER':
      highLow = 1
      IsHigher()
      break;
    case 'LOWER':
      highLow = 0
      IsHigher()
      break;
    default:
      NotAnOption()
      alert('Picking a new cardâ€¦')
      TheActualForRealsiesHighLow()
  }
}

function IsHigher() {
  if (shuffledDeck[1][1] > shuffledDeck[2][1]) {
    if (highLow === 1) {
      alert('Right!')
      Winnings('high')
    } else {
      alert('Wrong. :(')
      bet = 0
      PlayMore()
    }
  } else {
    if (highLow === 0) {
      alert('Right!')
      Winnings('low')
    } else {
      alert('Wrong. :(')
      bet = 0
      PlayMore()
    }
  }
}

function Winnings(which) {
  if (which === 'high') {
    switch (shuffledDeck[1][1]) {
      case 3:
      case 4:
      case 5:
        bet *= 1.1
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 6:
        bet *= 1.3
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 7:
        bet *= 1.5
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 8:
        bet *= 1.7
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 9:
        bet *= 2.1
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 10:
        bet *= 2.6
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 11:
        bet *= 3.5
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 12:
        bet *= 5.3
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 13:
        bet *= 10.7
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
    }
  }
  PlayMore('high or low')
  else {
    switch (shuffledDeck[1][1]) {
      case 13:
      case 12:
      case 11:
        bet *= 1.1
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 10:
        bet *= 1.3
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 9:
        bet *= 1.5
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 8:
        bet *= 1.7
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 7:
        bet *= 2.1
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 6:
        bet *= 2.6
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 5:
        bet *= 3.5
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 4:
        bet *= 5.3
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
      case 3:
        bet *= 10.7
        bet = Math.floor(bet)
        alert('You have ' + bet + ' gold in the bank.')
        break;
    }
    PlayMore('high or low')
  }
}

function PlayMore(what) {
  answer = prompt('Would you like to take your money or continue?', 'Take Money, Continue').toUpperCase()
  switch (answer) {
    case 'TAKE MONEY':
      alert('You won ' + bet + ' gold.')
      totalGold += bet
      usedCards = []
      InCasino()
      break;
    case 'CONTINUE':
      TheActualForRealsiesHighLow()
      break;
    default:
      NotAnOption()
      PlayMore()
  }
}
